package code09_01;

public class Sword {

	String name;
	int damage;
}
//オブジェクト指向は、仮想世界を現実世界のようにい扱うことだよ
//まさに動いているようにイメージできるかが大切
//まずは考え方をとらえることが大切
//仮想世界で活動するやつをインスタンス　またはオブジェクト
//インスタンスをうみだす金型がクラス
//
//AWS　
//VPCはバーチャル　プライベート　クラウドの略
//基本的にVPCは必要だけど、AWSが自動的に用意してくれる
//リージョンはデータセンターがある場所
//AZとは、「データセンター」のこと
//サブネットとは、ある1つの大きなネットワークの中を
//さらに小さく分割した小規模ネットワーク＝ネットワークの範囲のことをさします。
//Amazon EC2とはAWSが提供する「仮想サーバー」のこと
//インスタンスとはAWS クラウドに立てられた仮想サーバーのこと
//Elasticは弾力のあるみたいな意味。　だから柔軟だみたいな意味合いだろうね
//Amazon EBSとはAWS上で操作できる仮想ディスクのこと。
//管理コンソールからEBSボリュームを作って、それをサーバーインスタンスへ接続、切断できます。
//接続することをアタッチ、切断をデタッチと呼びます。
//Amazon RDSとはAmazonの提供するリレーショナルデータベースサービスのこと
//MySQLやPostgreSQL、Oracle、SQL Serverなど多くの種類のデータベースを、
//管理画面から設定するだけで構築・設定して利用できる
//IAMとはAWS上のサービスを操作するユーザーとアクセス権限を管理するやつ
//AmazonS3とはAmazonが提供するストレージサービス。
//バケットと呼ばれるリソース（入れ物）にデータを保存する
//保存できるデータ容量に上限がない
//Amazon CloudWatchとは、AWSが提供する「フルマネージド運用監視サービス
//AWSの各種リソースを監視してくれるサービス
//異常が生じた時にはそれをアラートで知らせるだけではなく、
//自動復旧も可能で、AWS上で監視を行う際には欠かせない存在
//
//オブジェクト指向は１００％使う
//必ず使う
//実際に番地があるのはnew Heroがあるとこにある
//Hero hに番地を代入しているだけ
//参照とかいう言葉は実際の現場では使わないよ
//インスタンスの独立性　同じクラスから生まれても、インスタンスが違えばお互いにえいｋｙ負うは受けないよ
//newの回数
//クラスといういのを一つの型として扱うようにできるよになる
//int Stringとかと同じように！
//Stringもどっかの誰かが作ってくれたクラス
//だから大文字。
//equalsはString型のメソッド　equals() length()
//番地めぐりをしている
//h.name.equals("ミナト")
//Heroクラスのname情報はnameの番地を見に行く。その中にeqalsメソッドというのがあるからそれを使おう
//参照といういのは番地で管理されている
//こういう仕組みがあるからこそ、newは２回使わないといけないようということ
//番地をコピーしている　インスタンスそのものをコピーしているわけではない
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
