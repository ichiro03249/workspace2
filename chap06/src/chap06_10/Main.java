package chap06_10;

public class Main {

//	public static void main(String[] args) {
//		// TODO 自動生成されたメソッド・スタブ
//		int[] heights = {172, 149, 152, 191, 155};
//		Arrays.sort(heights);
//		for(int h:heights){
//			System.out.println(h);
//		}
//	}
//-------------練習問題①-----------------

//	public static void main(String[] args) throws Exception {
//		// TODO 自動生成されたメソッド・スタブ
//		Zenhan.doWarusa();
//		Zenhan.doTogame();
//		comment.Kouhan.callDeae();
//		comment.Kouhan.showMondokoro();
//	}

	public static void main(String[] args) throws Exception {
	// TODO 自動生成されたメソッド・スタブ
		int count = 0;
		for(int i = 0; i<3; i++) {
			for(int j = 0; j<5; j++) {
					count++;
			}
			count++;
			System.out.println(i);
		}
//		int count = 0;
//		while (count < 10){
//
//		  count ++;
//		}


}
}
//0と１を代入するパターンをやる。それを２と表現。だからiのlengthは２
//	０＋０、０＋１、１＋０、１＋１のパターンになる
//	数字で始まる変数名は使えtないよ
//	使えるのはアルファべっと、数字、＿、＄
//数字ではじまるのはなし
//好きにつけていいのは識別子という
//使用可能な変数名→エラーが出ないやつという意味
//内のforと外のforをかけると答えを求められる
//オブジェクト指向　現実のせｋaいの登場人物とそのふるまいを、コンピューターｎa胃の世界で再現する
//責務＝クラスに処理を書いていくということ
//行動責任＝操作すること＝メソッド
//　口座残高をしっかり覚えておくという情報保持責任を負っている＝属性＝変数
//オブジェクト＝クラス
//行動指示
//継承　過去に作った部品を再利用する
//多態性　小さな違いを気にせず使うやつ
//カプセル化　一部の相手からは利用禁止にしちゃうやつ　出的な？
//完璧に理会する必要はないよ　
//３回くらい繰り返す　たぶんもっと繰り返すだろうなあ
//------------------------------練習問題７-------------------------------------------
//電車に乗る　販売所　行先　切符買う　車掌さんが切符を買ったかどうか確認する　降りる時に切符を回収
//結婚相談所　男性　女性　仲介人　情報登録　会う
//現在航行中の飛行機と空港を管理する。航空管制システム
//食材料理レシピ
//タッチパネル
//案内係オブジェクト
//　メソッド　検索する条件を聞く　調べる　返す　データベースから変数　持つ情報を
//メソッド　お店の名前、場所、平均価格を調べる検索する表示する　データベース　お店の名前、場所、平均価格、外観、内観、歴史的背景
//タイ焼き　金型　生み出されたタイ焼きがオブジェクト
//オブジェクトのことはインスタンスと表現する　わかりやすくするため　仮想世界で活動する実体
//クラス＝金型、設計図　インスタンス＝生成された実体＝タイ焼き、自動車、
//二つともオブジェクト
//
//
//
//
//
//
//
//
//
////
//
//
//
//

//同じパッケージに入っているときはimportはいらない
//クラス名だけでいい完全限定クラス名いらない
//１秒は１０００ミリ秒
//Thread sleep(3000);
//java.langはimportは必要ない
//

//ソースファイルをコンパイルしの意味がわからなかった
//プログラミング言語ごと機械語は別物
//コンパイルは英語で翻訳という意味
//だからソースファイルをコンパイルしてというのは、
//プログラミング言語からバイトコードに翻訳してという意味
//こんどは　それをするにはどうすればいいのかということ
//バイナリーフォルダが関連していると思う
//コンピュータの心臓部の名前はCPU
//ソースコード→材料生地
//コンパイル→こねる
//インタプリタ（JVM）→焼き上げ
//パンを作る工程として思い出そう
//コンパイラとインタプリタってソフトウェアなんだ！へー
//代表的な9つの種類データ型
//byte, short, int, long, float, double, boolean, char, String
//710ページ
//long 300000L, float 50.3F, char '', String ""
//エスケープシーケンス\" " \' ' \\ \ \n
//式計算処理をすることを式を評価するというらしい(笑)
//a += 2; → a = a + 2;
//インクリメント＋＋」デクリメントーー
//７６ページわからない
//型の箱が大きければ無理くり強制代入できるよ
//ピザをむりくり弁当箱に詰め込むときと同じ
//int m = Math.max(1,2);比較してれる便利メソッド
//文字列を数値に変換する命令
//int n = Integer.parseInt(age);
//parseって解析するって意味なんだね！湊くん
//integerは整数って意味なんだね！湊くん
//乱数を発生させる命令
//int m = new java.util.Random().nextInt();
//int m = new java.util.Random().nextInt();
//int m = new java.util.Scanner(System.in).nextInt();
//int n = new java.util.Scanner(System.in).nextLine();
//制御構文は３つ
//順次、分岐、繰り返し、
//順次、分岐、繰り返し、順次、分岐、繰り返し、順次、分岐、繰り返し
//if(tenki == true)
//while 繰り返しwhile繰り返し
//whileとforの違い　forは条件式と初期化、変化式が書ける
//whileは条件式のみ
//do whileは条件式の判定の前に実行してあとから判定する
//行動派と計画派みたいな感じ。人間のプログラムをシンプルに表わしてるなあ
//　a != b aがbでなかったら
//if(a == "晴れ")←はい！！！間違いです！！(笑)捕まえた！

//break;//if(a.equals("")
//&&→ and、 ||→ or
//int fortune = new java.util.Random().nextInt(4)+1;
//for文とswitch文の違いと使い分けの基準がわからない
//break文とcontinue文は両方とも中断する方法continue文はその周だけ中断するという意味
//int[] n = {1,2,4,5,6};
//配列はロッカー。番地は鍵。水木さんのあれメモリの話わかりやすかったな。どんなんだっけ？
//多次元配列は飯塚さんの上からみたやつがわかりやすかったじな
//多次元配列は配列の中に配列を入れるってやつ。男の中の男ってやつ(笑)
//戻り値は結果を表示
//オーバーロードとは？！
//多重定義　同じ名前のメソッドを定義すること
//でも確かパッケージが違えばオッケー「なんだよね
//でも、型、数、順番が違えばオッケーなんだ
//パッケージが違えばオッケー「ってクラス名だったかも
//コマンドライン引数
//javac Calc.java CalcLogic.java
//dir
//実行　java クラス名　mainメソッドがあるクラスの名前を指定する
//java コマンドはどのmainメソッドを起動するか？
//javac どのソースファイルをコンパイルするか？
//総合開発環境エクリプスのこと
//
//通常はお客様にアカウントを作成していただきIAMをもらって作業するのが一般的
//納品はサーバー周り「もできないとだめ
//
////	オーバーロードは多重定義法
//バッティングしちゃってるって意味じゃない
//重なっててもできる方法って意味
//java.util.Arrays.sort(heights); heightsに入っている配列を並べ替える
//パッケージ名さえ違えば同じクラス名が使える
//完全限定クラス名FQCN
//public static void main(String[] args)
 //コマンドライン引数
//オーバーロード多重定義法
//二次元配列の宣言int [][] m = new int[][]; p172
//クラス図は違う言語も同じ？
//クラス名属性操作
//
//
//
//
//
//

//-------------練習問題②-----------------
//-------------練習問題③-----------------
//-------------練習問題④-----------------
//c:\work\ex64\Main.class
//c:\work\ex64\comment\Zenhan.class
//c:\work\ex64\comment\Koumon.class
//

//-------------練習問題⑤-----------------
//c:\javaapp\koumon
//
//
//







//納期
//デザインカンプの種類（psd、ai、XDなど）
//修正事項があった場合の追加費用について
//納品方法について
//疑問点について
////カレントディレクトリpwd
//拡張for文は配列ノ時だけ
//for(int value:scores){
//System.out.print(value);
//}これでscoresの中を全部を取り出す処理
//逆に開発会社が経験したことない分野の開発を依頼してしまうと、
//調べながら開発することになるので、トラブルの元になりかねません。
//環境変数で検索場所を登録しておくことができる
//人月→ひと月かかるプロジェクトに何人必要なのか？という単位
//パッケージは小文字から、クラスは大文字から始まる
//だから、長いコードで先頭が大文字であればわかりやすい
//FQCN完全限定クラス名
//納期
//デザインカンプの種類（psd、ai、XDなど）
//修正事項があった場合の追加費用について
//納品方法について
//疑問点について
//サーバー納品
//ファイル納品
//〇〇が完成したのでご確認をお願いします
//修正して欲しい箇所があれば気軽にお申し付けください
//もしこれでOKであれば、次の工程に進みますが、
//次の工程に着手した後に発生した前工程までの修正については別途追加費用をいただきます
////
//
//
//
//
//
//
//
//
//
//
//



