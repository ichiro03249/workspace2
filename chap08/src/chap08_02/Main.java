package chap08_02;

public class Main {

	public static void main(String[] args) {
		// TODO 自動生成されたメソッド・スタブ
		Hero h = new Hero();
		Hero h2; //2行で書くパターン　hとh2のヒーローは別人
		h2 = new Hero();

		//フィールドに初期値をセット
		h.name = "ミナト";
		h.hp = 100;
		System.out.println("勇者" + h.name + "を生み出した！");

		h2.name =  "あさか";
		h2.hp = 90;
		//勇者のメソッドを呼び出してゆく
		h.sit(5);
		h.slip();
		h.sit(25);
		h.run();


	}

}
//0と１を代入するパターンをやる。それを２と表現。だからiのlengthは２
//０＋０、０＋１、１＋０、１＋１のパターンになる
//数字で始まる変数名は使えtないよ
//使えるのはアルファべっと、数字、＿、＄
//数字ではじまるのはなし
//好きにつけていいのは識別子という
//使用可能な変数名→エラーが出ないやつという意味
//内のforと外のforをかけると答えを求められる
//オブジェクト指向　現実のせｋaいの登場人物とそのふるまいを、コンピューターｎa胃の世界で再現する
//責務＝クラスに処理を書いていくということ
//行動責任＝操作すること＝メソッド
//口座残高をしっかり覚えておくという情報保持責任を負っている＝属性＝変数
//オブジェクト＝クラス
//行動指示
//継承　過去に作った部品を再利用する
//多態性　小さな違いを気にせず使うやつ
//カプセル化　一部の相手からは利用禁止にしちゃうやつ　出的な？
//完璧に理会する必要はないよ　
//３回くらい繰り返す　たぶんもっと繰り返すだろうなあ
//------------------------------練習問題７-------------------------------------------
//電車に乗る　販売所　行先　切符買う　車掌さんが切符を買ったかどうか確認する　降りる時に切符を回収
//結婚相談所　男性　女性　仲介人　情報登録　会う
//現在航行中の飛行機と空港を管理する。航空管制システム
//食材料理レシピ
//タッチパネル
//案内係オブジェクト
//メソッド　検索する条件を聞く　調べる　返す　データベースから変数　持つ情報を
//メソッド　お店の名前、場所、平均価格を調べる検索する表示する　データベース　お店の名前、場所、平均価格、外観、内観、歴史的背景
//タイ焼き　金型　生み出されたタイ焼きがオブジェクト
//オブジェクトのことはインスタンスと表現する　わかりやすくするため　仮想世界で活動する実体
//クラス＝金型、設計図　インスタンス＝生成された実体＝タイ焼き、自動車、
//二つともオブジェクト
//p310
//クラスの属性（情報）はクラスメソッドの中で定義する
//クラスメソッドの中で宣言された変数をフィールド変数という
//このフィールド変数のことだよ＝this.
//クラス図は違う言語も同じ？
//クラス名属性操作
//ローカル変数とフィールド変数
//this=自分自身のインスタンス　.は日本語でのの意味
//staticは基本つけない
//メッソド名は操作だから動詞で名づける
//thisをつけるのはフィールド変数にだけ
//フィールド変数じゃないものにはthisはつけてはいけない
//クラス型　System 基本型とクラス型の定義のしかたは似てるけど。
//インスタンスを生成して代入じはクラス型
//変数を宣言して代入はリテラル　変数ただのみたいな意味かな
//
//ｐ３９
//Hero h = new Hero();
//new Hero();はHero型を使ってインスタンスを新しく生成しあｍすよという意味
//Hero型の変数を使えるようにするために代入するよ。　HEro h
////クラス型の変数にはクラス型のインスタンスしか入れられない
//とりあえずそういうもんだと思っていればいいそうだ
//HEro h の中にHeroクラスのメソッドやらなんやらを入れるという行為
////継承だ。たぶん
//Heroクラスは一人の勇者を作る行為。何かをする人間を生成するみたいなこと。人じゃなくて自動機械のパターンもあるのかな
//クラスという金型があるからいくらでも新しい勇者を生み出せる
//クラスでは機能を与えて、インスタンスを生成することで魂をさずける感じ？かな
//神様クラスからするとh.name　登場人物クラスではthis
//
//命令されたら行動する行動責任
//情報責任　情報保持責任
//クラス　フィールドとメソッドでできている
//メンバ　クラスの中に存在するフィールドとメソッドを会わせていう総称
//Hero型　Hero h = new hero();
//文字列の値がないときは　nullになる
//数字の場合だと0になる
//booleanノ時はfalseが初期値
//変数という箱に入れてあげてしか使えない　インスタンスを生み出しただけではだめ
//メソッド呼び出しで勇者を動かせる
//インスタンスの生成にはnewを使う
//フィールドを利用するとき　変数名.フィールド名
//メソッドを呼び出す時　変数名.メソッド名
//
//
//
//
//
//
//
//
//
//
//
